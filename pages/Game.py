import streamlit as st
import random

def change_level(level):
    st.session_state["level"] = level  # –ó–º—ñ–Ω—é—î–º–æ —Ä—ñ–≤–µ–Ω—å

def reset_game():
    """–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –≥—Ä–∏ (–Ω–æ–≤–µ —Å–ª–æ–≤–æ, 5 —Å–ø—Ä–æ–±, –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫ –±—É–∫–≤)."""
    if st.session_state["level"] == "easy":
        st.session_state["random_word"] = random.choice(["–î–û–ë–†–û", "–õ–Æ–ë–û–í", "–î–†–£–ó–Ü"])
        st.session_state["count"] = 5
    elif st.session_state["level"] == "medium":
        st.session_state["random_word"] = random.choice(["–°–ú–Ü–õ–ò–í–ò–ô", "–ß–ê–†–Ü–í–ù–ò–ô", "–í–ê–ñ–õ–ò–í–ò–ô"])
        st.session_state["count"] = 8
    elif st.session_state["level"] == "hard":
        st.session_state["random_word"] = random.choice(["–ü–†–û–ì–†–ê–ú–£–í–ê–ù–ù–Ø", "–ú–ê–¢–ï–ú–ê–¢–ò–ö–ê", "–ï–ù–ï–†–ì–Ü–Ø"])
        st.session_state["count"] = 10

    st.session_state["guessed_letters"] = []
    st.session_state["current_letter"] = ""

def app(): 
    if "level" not in st.session_state:
        st.session_state["level"] = "menu"

    st.title("–ì—Ä–∞")

    st.markdown(
        """<style>
        .stButton>button {
            border-radius: 8px;
            padding: 10px 20px;
            font-size: 16px;
            transition: background-color 0.3s ease;
        }
        .stButton>button:hover {
            background-color: #4F9A8C !important;  /* –°–≤—ñ—Ç–ª–æ-–±—ñ—Ä—é–∑–æ–≤–∏–π —Ñ–æ–Ω –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
            color: white !important;
        }
        .back-button button, .retry-button button, .level-button button {
            background-color: #FFFFFF !important;
            border: 8px solid #4F9A8C !important; /* –°–≤—ñ—Ç–ª–æ-–±—ñ—Ä—é–∑–æ–≤–∏–π –±–æ—Ä–¥–µ—Ä */
            color: #4F9A8C !important;  /* –¢–µ–∫—Å—Ç —Å–≤—ñ—Ç–ª–æ-–±—ñ—Ä—é–∑–æ–≤–∏–π */
        }
        .back-button button:hover, .retry-button button:hover, .level-button button:hover {
            background-color: #4F9A8C !important;
            color: white !important;  /* –ë—ñ–ª–∏–π —Ç–µ–∫—Å—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
        }
        .button-container {
            display: flex;
            justify-content: space-between;
        }
        </style>""",
        unsafe_allow_html=True
    )

    if st.session_state["level"] == "menu":
        st.subheader("–í–∏–±–µ—Ä—ñ—Ç—å —Ä—ñ–≤–µ–Ω—å:")
        st.button("–õ–µ–≥–∫–∏–π", on_click=change_level, args=("easy",), key="easy_button", use_container_width=True)
        st.button("–°–µ—Ä–µ–¥–Ω—ñ–π", on_click=change_level, args=("medium",), key="medium_button", use_container_width=True)
        st.button("–°–∫–ª–∞–¥–Ω–∏–π", on_click=change_level, args=("hard",), key="hard_button", use_container_width=True)

    else:
        levels = {
            "easy": ("–õ–µ–≥–∫–∏–π —Ä—ñ–≤–µ–Ω—å", [
                "https://i.postimg.cc/xjbC1sgp/2025-03-16-150455.png",
                "https://i.postimg.cc/TYwtbDLs/2025-03-16-150621.png",
                "https://i.postimg.cc/9fjPLR0C/2025-03-16-150721.png",
                "https://i.postimg.cc/W35Mp5n1/2025-03-16-150757.png",
                "https://i.postimg.cc/28sn5b4h/2025-03-16-150811.png",
                "https://i.postimg.cc/jjKNzp3j/2025-03-16-150835.png"
            ]),
            "medium": ("–°–µ—Ä–µ–¥–Ω—ñ–π —Ä—ñ–≤–µ–Ω—å", [
                "https://i.postimg.cc/TwTnVzw9/2025-03-16-154207.png",
                "https://i.postimg.cc/vH4ftLQp/2025-03-16-154229.png",
                "https://i.postimg.cc/1zQFSkpQ/2025-03-16-154249.png",
                "https://i.postimg.cc/tJYZDpHh/2025-03-16-154304.png",
                "https://i.postimg.cc/RVGChj5m/2025-03-16-155003.png",
                "https://i.postimg.cc/6Q4BHq76/2025-03-16-155018.png",
                "https://i.postimg.cc/QC4PGgP2/2025-03-16-155036.png",
                "https://i.postimg.cc/QNmZJ16k/2025-03-16-155049.png",
                "https://i.postimg.cc/wB8rpjfj/2025-03-16-155109.png"
            ]),
        }

        level_name, image_paths = levels.get(st.session_state["level"], ("", []))
        st.subheader(level_name)

        if "random_word" not in st.session_state:
            reset_game()

        random_word = st.session_state["random_word"]
        count = st.session_state["count"]
        guessed_letters = st.session_state["guessed_letters"]

        img_index = max(0, min(len(image_paths) - 1, len(image_paths) - 1 - count))
        st.image(image_paths[img_index])

        display_word = "".join([letter if letter in guessed_letters else "_" for letter in random_word])
        display_word = display_word[0].upper() + display_word[1:].lower()
        st.subheader(f"–°–ª–æ–≤–æ: {display_word}")

        def process_letter():
            letter = st.session_state["current_letter"].upper()
            if letter and letter not in guessed_letters and letter.isalpha():
                if letter in random_word:
                    guessed_letters.append(letter)
                    st.session_state["guessed_letters"] = guessed_letters
                else:
                    st.session_state["count"] -= 1
            st.session_state["current_letter"] = ""

        st.text_input("–í–≤–µ–¥—ñ—Ç—å –±—É–∫–≤—É:", key="current_letter", max_chars=1, on_change=process_letter)

        if "_" not in display_word:
            st.success(f"üéâ –í–∏ –≤–∏–≥—Ä–∞–ª–∏! –°–ª–æ–≤–æ: {random_word}")
            st.markdown('<div class="retry-button">', unsafe_allow_html=True)
            st.button("–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", on_click=reset_game)
            st.markdown('</div>', unsafe_allow_html=True)

        elif st.session_state["count"] == 0:
            st.error(f"‚ùå –í–∏ –ø—Ä–æ–≥—Ä–∞–ª–∏. –ó–∞–≥–∞–¥–∞–Ω–µ —Å–ª–æ–≤–æ: {random_word}")
            st.markdown('<div class="retry-button">', unsafe_allow_html=True)
            st.button("–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", on_click=reset_game)
            st.markdown('</div>', unsafe_allow_html=True)

        # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 2 –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ù–∞–∑–∞–¥" —ñ "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑"
        col1, col2 = st.columns([1, 1])  # 2 —Ä—ñ–≤–Ω—ñ –∫–æ–ª–æ–Ω–∫–∏

        with col2:  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∑ –ø—Ä–∞–≤–æ–≥–æ –±–æ–∫—É
            st.markdown('<div class="back-button">', unsafe_allow_html=True)
            st.button("–ù–∞–∑–∞–¥", on_click=change_level, args=("menu",))
            st.markdown('</div>', unsafe_allow_html=True)

        with col1:  # –ö–Ω–æ–ø–∫–∞ "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑" –∑ –ª—ñ–≤–æ–≥–æ –±–æ–∫—É
            st.markdown('<div class="retry-button">', unsafe_allow_html=True)
            st.button("–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑", on_click=reset_game)
            st.markdown('</div>', unsafe_allow_html=True)